import java.util.*;

class Solution {
    public int solution(int h1, int m1, int s1, int h2, int m2, int s2) {
        int answer = -1;
        int startTime = h1 * 60 * 60 + m1 * 60 + s1;
        int endTime = h2 * 60 * 60 + m2 * 60 + s2;

        // 초침과 분침이 겹치는 총 횟수 계산
        int et = endTime * 59 / 3600 + endTime * 719 / 43200;
        int st = startTime * 59 / 3600 + startTime * 719 / 43200;
        answer = et - st;

        // 시작 시간이 정오 이후일 경우
        // 정오에 발생한 겹침 더하기
        if (startTime >= 43200) {
            answer += 1;
        }
        // 종료 시간이 정오 이후일 경우
        // 정오 발생한 겹침 중복 계산 안되도록 빼기
        if (endTime >= 43200) {
            answer -= 1;
        }
        // 시작시간에, 초침과 분침이 겹치는지, 초침과 시침이 겹치는지 확인한다.
        if (startTime * 59 % 3600 == 0 || startTime * 719 % 43200 == 0) {
            answer += 1;
        }

        return answer;
    }
}

/**
 * 절대적으로 겹치는 횟수로 구한다.
 * 상대속도를 구한다.
 * 초침: 1초에 6도 회전, 1분에 360도, 1시간에도 360도 회전
 * 분침: 1분에 6도 회전
 * 시침 1시간 30도 회전
 * <p>
 * 분침 속도 = 360도 / 3600초 = 0.1 도/초
 * 시침 속도 = 360도 / 60초 = 6 도/초
 * 상대 속도 = 5.9 도/초
 * 겹치는 시간 = 360도 / 5.9도/초 = 61초
 * 3600 / 61 = 59번
 * <p>
 * 시침 속도: 360도 / 12시간 = 360도 / 43200초 = 0.00833 도/초
 * 초침 속도: 360도/60초 = 6도/초
 * 상대속도: 6 - 0.00833 = 5.99167
 * 겹치는 시간: 360도 / 5.99167도/초 = 60.083초
 * 3600초 / 60.083 => 한시간동안 59.917번 겹침
 * 59.917 * 12 = 719번
 */